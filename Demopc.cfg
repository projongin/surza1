/**************************************************************************/
/*                                                                        */
/*  File: DEMOPC.CFG                             Copyright (c) 1996,2006  */
/*  Version: 5.0                                 On Time Informatik GmbH  */
/*                                                                        */
/*                                                                        */
/*                                      On Time        /////////////----- */
/*                                    Informatik GmbH /////////////       */
/* --------------------------------------------------/////////////        */
/*                                  Real-Time and System Software         */
/*                                                                        */
/**************************************************************************/

// Configuration file for a typical PC compatible target computer for the
// On Time RTOS-32 demo programs. RAM above 1M should be declared in the
// application specific config file.
//
// Symbol BOOT can be defined to include boot code.

Region  NullPage           0    4k  RAM     NoAccess   // Catch NULL pointer assignments
Region  DOSMem            4k  252k  RAM     Assign     // Reserve for the case we boot from DOS
Region  LowMem          256k  316k  RAM     Assign     // Used for boot code and Monitor

Region  ColorGraphic  A0000h   64k  Device  SysRead    // EGA/VGA Graphics VideoRAM
Region  MonoText      B0000h    4k  Device  ReadWrite  // Monochrome text video memory
Region  ColorText     B8000h    4k  Device  ReadWrite  // Text mode video ram

Region  BIOS          E0000h  128k  Device  ReadOnly   // Reserved for [PCI]BIOS

Region  CAN           df000h    1k  Device  ReadWrite


#ifdef BOOT                                            // This stuff is for self booting programs only

 //COMPort   COM1  115200                                // Target's port for cross debugging
  COMPort Ethernet 192.168.5.20

 VideoRAM  ColorText                                   // For console I/O
// VideoRAM  None                                  

 BOOTFLAGS = 0                                         // Set boot code options here
 //BOOTFLAGS = BF_NO_VESA_LFB

 Locate BootCode    BIOSBOOT.EXE  LowMem               // Boot with BIOS help
 Locate BootData    BootData      LowMem  0 16         // Boot stuff must be in conventional memory
 Locate DiskBuffer  DiskBuffer    DOSMem               // Needed by disk loader


 #if 0
 
 #define CGA_640_200_16      0x006      // METWND01.DLL       n/s (not supported)

 #define EGA_Mono            0x00F      // METWND04.DLL       n/s

 #define VGA_640_480_2       0x011      // METWND01.DLL       n/s
 #define VGA_640_480_16      0x012      // METWND05.DLL       VGA_4
 #define VGA_800_600_16      0x06A      // METWND05.DLL       VGA_4
 #define VGA_320_200_256     0x013      // METWND08.DLL       VESA_8

 #define VESA_800_600_16     0x102      // METWND05.DLL       VGA_4
 #define VESA_1024_768_16    0x104      // n/s                n/s
 #define VESA_1280_1024_16   0x106      // n/s                n/s

 #define VESA_640_480_256    0x101      // METWND08.DLL       VESA_8
 #define VESA_800_600_256    0x103      // METWND08.DLL       VESA_8
 #define VESA_1024_768_256   0x105      // METWND08.DLL       VESA_8
 #define VESA_1280_1024_256  0x107      // METWND08.DLL       VESA_8

 #define VESA_640_480_32k    0x110      // METWND09.DLL       VESA_16
 #define VESA_800_600_32k    0x113      // METWND09.DLL       VESA_16
 #define VESA_1024_768_32k   0x116      // METWND09.DLL       VESA_16
 #define VESA_1280_1024_32k  0x119      // METWND09.DLL       VESA_16

 #define VESA_640_480_64k    0x111      // METWND09.DLL       VESA_16
 #define VESA_800_600_64k    0x114      // METWND09.DLL       VESA_16
 #define VESA_1024_768_64k   0x117      // METWND09.DLL       VESA_16
 #define VESA_1280_1024_64k  0x11A      // METWND09.DLL       VESA_16

 #define VESA_640_480_16M    0x112      // n/s                VESA_32
 #define VESA_800_600_16M    0x115      // n/s                VESA_32
 #define VESA_1024_768_16M   0x118      // n/s                VESA_32
 #define VESA_1280_1024_16M  0x11B      // n/s                VESA_32


GMode  VESA_800_600_16    VGA_800_600_16    VGA_640_480_16   VESA_640_480_16M  VESA_800_600_16M


#endif


#endif
